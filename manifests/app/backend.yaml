---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  annotations:
    app.kubernetes.io/name: backend
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/component: backend
      app.kubernetes.io/part-of: sentinel-dashboard
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: backend
        app.kubernetes.io/version: "2.2.0"
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: sentinel-dashboard
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: sentinel-dashboard
    spec:
      containers:
        - name: backend
          image: shehabeldeen/backend-app:v2
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /usr/app/metrics
              name: metrics-storage
          ports:
            - name: backend
              containerPort: 8080
          resources: {}
          # ? disabled due to limited resources
          #   requests:
          #     memory: "128Mi"
          #     cpu: "64m"
          #   limits:
          #     memory: "256Mi"
          #     cpu: "128m"
          livenessProbe:
            httpGet:
              path: /health
              port: backend
            initialDelaySeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: backend
            initialDelaySeconds: 5
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: MONGO_DB_ROOT_USER

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: MONGO_DB_ROOT_PASSWORD

            - name: DB_AUTH_SRC
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: MONGO_DB_AUTH_SRC

            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: mongodb
                  key: MONGO_DB_HOST

            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: mongodb
                  key: MONGO_DB_PORT

            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: mongodb
                  key: MONGO_DB_NAME
      volumes:
        - name: metrics-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  annotations:
    app.kubernetes.io/name: backend
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
  labels:
    svc.kubernetes.io/name: backend
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
spec:
  selector:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
  ports:
    - name: http
      port: 8081
      targetPort: backend
  type: LoadBalancer
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: backend
  namespace: monitoring
  annotations:
    app.kubernetes.io/name: backend
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
    release: prometheus
spec:
  namespaceSelector:
    matchNames:
      - default
  selector:
    matchLabels:
      svc.kubernetes.io/name: backend
      app.kubernetes.io/name: backend
      app.kubernetes.io/component: backend
      app.kubernetes.io/part-of: sentinel-dashboard
  endpoints:
    - port: http
      interval: 5s
      path: /metrics
---
# ? since we are in development, this is acceptable
# ? the reason for doing this is because, when we expose our frontend service on our local machine, and we click on either any of the buttons
# ? our browser will be the one invoking the request not the container as this is a static website and our local machine has no knowledge of the DNS entry
# * please refer to https://www.reddit.com/r/kubernetes/comments/wu5ths/comment/il8a37s/ for more information
apiVersion: v1
kind: Service
metadata:
  name: backend-external
  annotations:
    app.kubernetes.io/name: backend
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
  labels:
    svc.kubernetes.io/name: backend-external
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sentinel-dashboard
  ports:
    - name: http
      port: 8080
      targetPort: backend
      nodePort: 30005
